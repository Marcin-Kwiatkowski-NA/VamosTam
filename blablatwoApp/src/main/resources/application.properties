spring.application.name=blablatwo

# enable ProblemDetails error messages. Once enabled, Spring reports errors using ProblemDetail:
#spring.mvc.problemdetails.enabled=true

## do not show stacktrace and message in default whitelabel error page
#server.error.include-stacktrace=never
#server.error.include-message=never
#
## rest client will see body from this page, but not web browser
#server.error.path=/people
#
## disable spring handler, now tomcat will return error page
#server.error.whitelabel.enabled=false

# Datasource configuration
#spring.datasource.url=jdbc:h2:mem:ride_sharing;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;DATABASE_TO_UPPER=false
# to file database:
#spring.datasource.url=jdbc:h2:file:./data/springdb
#spring.sql.init.mode=always
#

spring.datasource.url=jdbc:postgres://vamos:norris@akkowocscggkwwocowscw08c:5432/vamos
spring.datasource.username=vamos
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA properties (optional, but commonly used)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true # Set to false in production

# H2 configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# JPA configuration

# -------Logging--------

# Log levels
#logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Log file location
logging.file.name=${user.home}/logs/blabla2.log

# Log file size and rotation
logging.file.max-size=10MB
logging.file.max-history=30

# Log format (optional)
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger{39}){cyan} - %m%n
